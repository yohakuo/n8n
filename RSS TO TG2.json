{
  "name": "RSS TO TG2",
  "nodes": [
    {
      "parameters": {
        "interval": 8,
        "unit": "hours"
      },
      "name": "Interval",
      "type": "n8n-nodes-base.interval",
      "typeVersion": 1,
      "position": [
        -1392,
        -176
      ],
      "id": "3561e154-eaae-4028-a7d4-a84d6569189c"
    },
    {
      "parameters": {
        "chatId": "-1002539478521",
        "text": "=📝{{$json[\"title\"]}} #blog \n\n{{$json[\"link\"]}}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "name": "Send a text message",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        384,
        -192
      ],
      "id": "1a68f417-111d-4dd8-b6db-a3e7f616e9fe",
      "webhookId": "c132fbfd-f451-4389-8c6c-d53753797b0b",
      "credentials": {
        "telegramApi": {
          "id": "ybREdfyCP1VmuHCL",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.feedUrl }}",
        "options": {
          "customFields": ""
        }
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -736,
        -176
      ],
      "id": "80646ce4-75ab-46cb-a1b8-0b662ff03e4e",
      "name": "RSS Read",
      "executeOnce": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const myRssFeeds = [\n  { name: \"ignativssss\", url: \"https://ignativssss.github.io//index.xml\" },\n  { name: \"asyncx\", url: \"https://blog.asyncx.top/zh.xml\" },\n  //{ name: \"birds\", url: \"https://moresci.sale/@birds.rss\" },\n  { name: \"shyrz\", url: \"https://shyrz.me/rss/\" },\n  { name: \"douchiBook\", url: \"https://bamboobone9.com/index.xml\" },\n  { name: \"ruanyifeng\", url: \"https://feeds.feedburner.com/ruanyifeng\" },\n  { name: \"decohack\", url: \"https://decohack.com/feed/\" }\n \n];\n\n\nreturn myRssFeeds.map(feed => ({\n  json: {\n    feedName: feed.name,\n    feedUrl: feed.url\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1184,
        -96
      ],
      "id": "648e3900-3c63-4041-9cc8-b118b0c266f2",
      "name": "list"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "69359453-ca25-44b1-b38a-9e21aaf821ca",
              "name": "feedName",
              "value": "={{ $('list').item.json.feedName }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -208,
        -176
      ],
      "id": "02e14b75-4f84-45e8-884e-133222051bd7",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "removeItemsSeenInPreviousExecutions",
        "dedupeValue": "={{ $json.guid || $json.link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        208,
        -192
      ],
      "id": "5a9c8360-fc24-49f9-bf23-ff857a5e20bc",
      "name": "Remove Duplicates"
    },
    {
      "parameters": {},
      "id": "2f946596-2028-447d-b67a-293595758b7d",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -1360,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst latestByFeed = {}; // 用对象保存每个源的最新文章\n\nfor (const item of items) {\n  const feed = item.json.feedName || 'unknown';\n  const pubDate = item.json.pubDate ? new Date(item.json.pubDate).getTime() : 0;\n\n  if (!latestByFeed[feed]) {\n    latestByFeed[feed] = item;\n  } else {\n    const existingDate = latestByFeed[feed].json.pubDate ? new Date(latestByFeed[feed].json.pubDate).getTime() : 0;\n    if (pubDate > existingDate) {\n      latestByFeed[feed] = item;\n    }\n  }\n}\n\n// 把对象里的结果转成数组返回\nreturn Object.values(latestByFeed);\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        48,
        -192
      ],
      "id": "18a6d50a-cfab-4473-82c0-534341934b19",
      "name": "check",
      "executeOnce": false
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1008,
        48
      ],
      "id": "5037983e-0d50-4f68-b8bc-93d6fc799a17",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        -800,
        48
      ],
      "id": "0912e1e9-1e3b-4421-a500-75e5bd1d2c23"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\n// 按日期降序排列\nitems.sort((a, b) => {\n  const dateA = new Date(a.json.pubDate || 0).getTime();\n  const dateB = new Date(b.json.pubDate || 0).getTime();\n  return dateB - dateA;\n});\n\nreturn items.slice(0, 40);\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -480,
        -176
      ],
      "id": "bfc5d397-2cb9-43bf-ac72-7337e8f3fdb9",
      "name": "cut"
    }
  ],
  "pinData": {},
  "connections": {
    "Interval": {
      "main": [
        [
          {
            "node": "list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read": {
      "main": [
        [
          {
            "node": "cut",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "list": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cut": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "FcbdW9E8cGs0jMdV"
  },
  "versionId": "b0dd57fc-ca7f-4d3b-b6c8-f5fab1acb099",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "66e3945e387b967297c879f5c5771223ee11f8c4960cd16f538eeef47f6ad36e"
  },
  "id": "GaQuFzPWXceiwXG2",
  "tags": []
}